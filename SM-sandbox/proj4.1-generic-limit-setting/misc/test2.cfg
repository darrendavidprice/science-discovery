#  ======================================================  #
#  ======     SETTINGS FOR MCHI vs LAMBDA TEST     ======  #
#  ======================================================  #
#  
#  Follows config parser format
#    https://docs.python.org/3/library/configparser.html
#
#  Lists should be written as if they were python
#    (so will crash if you forget "s for labels)
#



[GET_LIMITS]
Labels = [ [1000, 0.90, r"$\bf Fermionic$ $\bf DM$ $\bf EFT$ $\bf (D7)$"],
	   [1000, 0.82, r"Operator  $\frac{\bar\chi\chi {\rm V}^{\mu\nu}V_{\mu\nu}}{\Lambda^3}$,  $c_{\rm D7a}$ = 1"],
	   [1000, 0.74, r"Input:  $\it EPJC (2017) 77:765$"],
	   [1000, 0.66, r"$m_{\chi}=10$ GeV"],
	   [1000, 0.58, r"$pp \rightarrow \geq1j$ / VBF, $R^{\rm miss}$"],
	   [1000, 0.50, r"$L=3.2~{\rm fb}^{-1}$, $\sqrt{s} = 13$ TeV"] ]
Legend.position = (0.5, 0.16)
axis.xlim = [300,700]
axis.tick_params = {"which":"both", "direction":"in", "color":"gray"}
xaxis.minor_locator = 10
xaxis.major_locator = 100
xaxis.ticks_position = "both"


[PARAMS]
ScanParams = ["Lambda"]
Lambda.scan.limits = [300, 700]
Lambda.scan.stepsize = 5
Lambda.label = EFT scale $\Lambda$
Lambda.units = GeV

[GENERAL]
StoreValuesForQuickAccess = False
LoadQuickAccessValues = False
SaveAndLoadToys = False
TestStatistic: chi2
TestStatistic.Distribution: asymptotic
LimitsMethod: CLs
ConfidenceLevel: 0.95


[STEERING]
PredictionMethod = ScaleByL6
BSM.load = ['BSM']
SM.theoretical.values  = SM_theory
SM.theoretical.cov     = 0
SM.experimental.values = SM_exp
SM.experimental.cov    = SM_exp
SM.experimental.ntoys  = 1000
meas.values            = meas
meas.cov               = meas


[INPUTS]
Inputs = ['i0']

i0.file.path = /Users/Ste/PostDoc/git-with-DP/SM-sandbox/proj4.1-generic-limit-setting/stupid_test/.test_values.pickle
i0.file.type = pickle
i0.extract = ["meas", "SM_exp", "SM_theory", "BSM"]

i0.meas.keys.values       = ["meas"]
i0.meas.keys.covariance   = ["meas_cov"]
i0.meas.type              = meas

i0.SM_exp.keys.values     = ["SM"]
i0.SM_exp.keys.covariance = ["SM_exp_cov"]
i0.SM_exp.type            = SM
i0.SM_exp.IncludesSM      = True

i0.SM_theory.keys.values     = ["SM"]
i0.SM_theory.keys.covariance = ["SM_theory_cov"]
i0.SM_theory.type            = BSM
i0.SM_theory.IncludesSM      = True

i0.BSM.keys.values        = ["BSM_plus_SM_400"]
i0.BSM.keys.covariance    = ["BSM_plus_SM_400_cov"]
i0.BSM.type               = BSM
i0.BSM.IncludesSM         = True
i0.BSM.Lambda             = 400


